# Copyright (c) 2023, CS Group
#
# This file is part of cars_point_cloud_to_mesh
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# cars_point_cloud_to_mesh setup configuration file

# package setup main metadata
[metadata]
name = cars_point_cloud_to_mesh
author = CS Group
author_email = ospo@cs-soprasteria.com
url = https://github.com/CS-SI/cars_point_cloud_to_mesh
description = Mesh Generation from CARS point cloud
long_description = file:README.md
long_description_content_type = text/markdown
license = Apache Software License 2.0
license_files = LICENSE
platform = any
keywords= cars_point_cloud_to_mesh, 3D, DEM, cars, pandora, photogrammetry
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    Intended Audience :: End Users/Desktop
    Intended Audience :: Science/Research
    Environment :: Console
    Topic :: Software Development :: Libraries :: Python Modules
    License :: OSI Approved :: Apache Software License
    Operating System :: OS Independent
    Natural Language :: English
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8

[options]
python_requires = >=3.8


# Packages dependencies
install_requires =
    argparse                      # Python Argument Parser
    cars==0.8.*
    triangle>=20230923
    numpy
    numba
    scipy
    json-checker
    rasterio

package_dir =
    . = cars_point_cloud_to_mesh
packages = find:

[options.extras_require]
# [dev] mode dependencies
dev =
    pre-commit
    isort>=5.8.0                  # Check imports
    black>=21.5b0                 # PEP8 format code
    flake8>=3.9.1                 # General linter
    flake8-comprehensions>=3.4.0  # Check list/dict/set
    flake8-bugbear>=21.4.3        # Add some rules to flake8
    pylint                        # General linter
    setuptools_scm                # versions from git tag
    twine                         # for pypi upload
    build
    pytest
    pytest-cov

# [docs] mode dependencies
docs =
    sphinx
    sphinx_rtd_theme
    sphinx_autoapi
    sphinx_tabs

# [notebook] mode dependencies
notebook =
    notebook
    bokeh

# deploy data from the designed directory into package
[options.package_data]
    cars_point_cloud_to_mesh = data/*

# entry points cli scripts
[options.entry_points]
console_scripts =
    cars_point_cloud_to_mesh = cars_point_cloud_to_mesh.cli:main

# Specify no universal wheel supported (only Python3)
[bdist_wheel]
universal = false

# Flake8 configuration
[flake8]
exclude = .git, venv, build, dist, tests/test_output, docs
# Add flake8 ignored rules
ignore =
# from black compatibility
extend-ignore = E203, W503
max-complexity = 15
max-line-length = 80
#show-source = true
# errors types are not selected by default, so add them to your selection
select = E,F,W,C,B9,C4,B
